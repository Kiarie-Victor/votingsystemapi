create table if not exists django_migrations
(
    id      bigint generated by default as identity
        constraint django_migrations_pkey
            primary key,
    app     varchar(255)             not null,
    name    varchar(255)             not null,
    applied timestamp with time zone not null
);

create table if not exists django_content_type
(
    id        integer generated by default as identity
        constraint django_content_type_pkey
            primary key,
    app_label varchar(100) not null,
    model     varchar(100) not null,
    constraint django_content_type_app_label_model_76bd3d3b_uniq
        unique (app_label, model)
);

create table if not exists auth_permission
(
    id              integer generated by default as identity
        constraint auth_permission_pkey
            primary key,
    name            varchar(255) not null,
    content_type_id integer      not null
        constraint auth_permission_content_type_id_2f476e4b_fk_django_co
            references django_content_type
            deferrable initially deferred,
    codename        varchar(100) not null,
    constraint auth_permission_content_type_id_codename_01ab375a_uniq
        unique (content_type_id, codename)
);

create index if not exists auth_permission_content_type_id_2f476e4b
    on auth_permission (content_type_id);

create table if not exists auth_group
(
    id   integer generated by default as identity
        constraint auth_group_pkey
            primary key,
    name varchar(150) not null
        constraint auth_group_name_key
            unique
);

create index if not exists auth_group_name_a6ea08ec_like
    on auth_group (name varchar_pattern_ops);

create table if not exists auth_group_permissions
(
    id            bigint generated by default as identity
        constraint auth_group_permissions_pkey
            primary key,
    group_id      integer not null
        constraint auth_group_permissions_group_id_b120cbf9_fk_auth_group_id
            references auth_group
            deferrable initially deferred,
    permission_id integer not null
        constraint auth_group_permissio_permission_id_84c5c92e_fk_auth_perm
            references auth_permission
            deferrable initially deferred,
    constraint auth_group_permissions_group_id_permission_id_0cd325b0_uniq
        unique (group_id, permission_id)
);

create index if not exists auth_group_permissions_group_id_b120cbf9
    on auth_group_permissions (group_id);

create index if not exists auth_group_permissions_permission_id_84c5c92e
    on auth_group_permissions (permission_id);

create table if not exists accounts_otp
(
    id          uuid                     not null
        constraint accounts_otp_pkey
            primary key,
    otp_code    varchar(6)               not null,
    created_at  timestamp with time zone not null,
    is_verified boolean                  not null,
    reg_no      varchar(100)             not null
);

create table if not exists accounts_member
(
    password      varchar(128) not null,
    last_login    timestamp with time zone,
    id            uuid         not null
        constraint accounts_member_pkey
            primary key,
    firstname     varchar(100) not null,
    secondname    varchar(100) not null,
    reg_no        varchar(100) not null
        constraint accounts_member_reg_no_key
            unique,
    email         varchar(100) not null,
    faculty       varchar(100) not null,
    year_of_study integer      not null,
    is_active     boolean      not null,
    is_staff      boolean      not null,
    is_superuser  boolean      not null
);

create index if not exists accounts_member_reg_no_d6415992_like
    on accounts_member (reg_no varchar_pattern_ops);

create table if not exists accounts_member_groups
(
    id        bigint generated by default as identity
        constraint accounts_member_groups_pkey
            primary key,
    member_id uuid    not null
        constraint accounts_member_groups_member_id_e68138f6_fk_accounts_member_id
            references accounts_member
            deferrable initially deferred,
    group_id  integer not null
        constraint accounts_member_groups_group_id_5c4b2fbe_fk_auth_group_id
            references auth_group
            deferrable initially deferred,
    constraint accounts_member_groups_member_id_group_id_c77bff9c_uniq
        unique (member_id, group_id)
);

create index if not exists accounts_member_groups_member_id_e68138f6
    on accounts_member_groups (member_id);

create index if not exists accounts_member_groups_group_id_5c4b2fbe
    on accounts_member_groups (group_id);

create table if not exists accounts_member_user_permissions
(
    id            bigint generated by default as identity
        constraint accounts_member_user_permissions_pkey
            primary key,
    member_id     uuid    not null
        constraint accounts_member_user_member_id_dded25fd_fk_accounts_
            references accounts_member
            deferrable initially deferred,
    permission_id integer not null
        constraint accounts_member_user_permission_id_1dd5f43a_fk_auth_perm
            references auth_permission
            deferrable initially deferred,
    constraint accounts_member_user_per_member_id_permission_id_0ae3c3ea_uniq
        unique (member_id, permission_id)
);

create index if not exists accounts_member_user_permissions_member_id_dded25fd
    on accounts_member_user_permissions (member_id);

create index if not exists accounts_member_user_permissions_permission_id_1dd5f43a
    on accounts_member_user_permissions (permission_id);

create table if not exists django_admin_log
(
    id              integer generated by default as identity
        constraint django_admin_log_pkey
            primary key,
    action_time     timestamp with time zone not null,
    object_id       text,
    object_repr     varchar(200)             not null,
    action_flag     smallint                 not null
        constraint django_admin_log_action_flag_check
            check (action_flag >= 0),
    change_message  text                     not null,
    content_type_id integer
        constraint django_admin_log_content_type_id_c4bce8eb_fk_django_co
            references django_content_type
            deferrable initially deferred,
    user_id         uuid                     not null
        constraint django_admin_log_user_id_c564eba6_fk_accounts_member_id
            references accounts_member
            deferrable initially deferred
);

create index if not exists django_admin_log_content_type_id_c4bce8eb
    on django_admin_log (content_type_id);

create index if not exists django_admin_log_user_id_c564eba6
    on django_admin_log (user_id);

create table if not exists django_session
(
    session_key  varchar(40)              not null
        constraint django_session_pkey
            primary key,
    session_data text                     not null,
    expire_date  timestamp with time zone not null
);

create index if not exists django_session_session_key_c0390e0f_like
    on django_session (session_key varchar_pattern_ops);

create index if not exists django_session_expire_date_a5c62663
    on django_session (expire_date);

create table if not exists core_election
(
    id                 bigint generated by default as identity
        constraint core_election_pkey
            primary key,
    faculty            varchar(30)  not null,
    year_of_study      integer      not null
        constraint core_election_year_of_study_check
            check (year_of_study >= 0),
    title              varchar(100) not null,
    start_time         timestamp with time zone,
    end_time           timestamp with time zone,
    is_active          boolean      not null,
    number_of_winners  integer      not null
        constraint core_election_number_of_winners_check
            check (number_of_winners >= 0),
    created_by_id      uuid
        constraint core_election_created_by_id_7cf263f2_fk_accounts_member_id
            references accounts_member
            deferrable initially deferred,
    allowed_candidates integer      not null
        constraint core_election_allowed_candidates_check
            check (allowed_candidates >= 0),
    constraint core_election_faculty_year_of_study_start_time_9c53c492_uniq
        unique (faculty, year_of_study, start_time)
);

create index if not exists core_election_created_by_id_7cf263f2
    on core_election (created_by_id);

create table if not exists core_candidate
(
    id          bigint generated by default as identity
        constraint core_candidate_pkey
            primary key,
    manifesto   text                     not null,
    created_at  timestamp with time zone not null,
    member_id   uuid                     not null
        constraint core_candidate_member_id_fk
            references accounts_member
            on delete cascade,
    election_id bigint                   not null
        constraint core_candidate_election_id_ba34edf5_fk_core_election_id
            references core_election
            deferrable initially deferred,
    faculty     varchar(30)              not null,
    constraint core_candidate_member_id_election_id_c2157e72_uniq
        unique (member_id, election_id)
);

create index if not exists core_candidate_election_id_ba34edf5
    on core_candidate (election_id);

create index if not exists core_candidate_member_id_07380c6f
    on core_candidate (member_id);

create table if not exists core_result
(
    id           bigint generated by default as identity
        constraint core_result_pkey
            primary key,
    total_votes  double precision         not null,
    is_winner    boolean                  not null,
    candidate_id bigint                   not null
        constraint core_result_candidate_id_0e3581a2_fk_core_candidate_id
            references core_candidate
            deferrable initially deferred
        constraint core_result_candidate_id_fkey
            references core_candidate
            on delete cascade
        constraint core_result_candidate_id_fk
            references core_candidate
            on delete cascade,
    election_id  bigint                   not null
        constraint core_result_election_id_9ca624cf_fk_core_election_id
            references core_election
            deferrable initially deferred,
    updated_at   timestamp with time zone not null,
    constraint core_result_election_id_candidate_id_f38fc108_uniq
        unique (election_id, candidate_id)
);

create index if not exists core_result_candidate_id_0e3581a2
    on core_result (candidate_id);

create index if not exists core_result_election_id_9ca624cf
    on core_result (election_id);

create table if not exists core_vote
(
    id           bigint generated by default as identity
        constraint core_vote_pkey
            primary key,
    timestamp    timestamp with time zone not null,
    election_id  bigint                   not null
        constraint core_vote_election_id_c101abd6_fk_core_election_id
            references core_election
            deferrable initially deferred,
    voter_id     uuid                     not null
        constraint core_vote_voter_id_a3335fc0_fk_accounts_member_id
            references accounts_member
            deferrable initially deferred
        constraint core_vote_voter_id_fk
            references accounts_member
            on delete cascade,
    block_number bigint
        constraint core_vote_block_number_check
            check (block_number >= 0),
    from_address varchar(42),
    gas_used     bigint
        constraint core_vote_gas_used_check
            check (gas_used >= 0),
    to_address   varchar(42),
    tx_hash      varchar(66),
    tx_status    boolean,
    constraint core_vote_voter_id_election_id_2d430318_uniq
        unique (voter_id, election_id)
);

create index if not exists core_vote_election_id_c101abd6
    on core_vote (election_id);

create index if not exists core_vote_voter_id_a3335fc0
    on core_vote (voter_id);

create table if not exists core_vote_candidates
(
    id           bigint generated by default as identity
        constraint core_vote_candidates_pkey
            primary key,
    vote_id      bigint not null
        constraint core_vote_candidates_vote_id_9787ce58_fk_core_vote_id
            references core_vote
            deferrable initially deferred
        constraint core_vote_candidates_vote_id_fkey
            references core_vote
            on delete cascade,
    candidate_id bigint not null
        constraint core_vote_candidates_candidate_id_de6d796f_fk_core_candidate_id
            references core_candidate
            deferrable initially deferred
        constraint core_vote_candidates_candidate_id_fkey
            references core_candidate
            on delete cascade,
    constraint core_vote_candidates_vote_id_candidate_id_62e010f7_uniq
        unique (vote_id, candidate_id)
);

create index if not exists core_vote_candidates_vote_id_9787ce58
    on core_vote_candidates (vote_id);

create index if not exists core_vote_candidates_candidate_id_de6d796f
    on core_vote_candidates (candidate_id);

create table if not exists accounts_faculty
(
    id   bigint generated by default as identity
        constraint accounts_faculty_pkey
            primary key,
    code varchar(10) not null
        constraint accounts_faculty_code_key
            unique
);

create index if not exists accounts_faculty_code_06c4da9c_like
    on accounts_faculty (code varchar_pattern_ops);

create table if not exists flyway_schema_history
(
    installed_rank integer                 not null
        constraint flyway_schema_history_pk
            primary key,
    version        varchar(50),
    description    varchar(200)            not null,
    type           varchar(20)             not null,
    script         varchar(1000)           not null,
    checksum       integer,
    installed_by   varchar(100)            not null,
    installed_on   timestamp default now() not null,
    execution_time integer                 not null,
    success        boolean                 not null
);

create index if not exists flyway_schema_history_s_idx
    on flyway_schema_history (success);

create table if not exists tokens
(
    id        serial
        constraint tokens_pkey
            primary key,
    token     text not null
        constraint tokens_token_key
            unique,
    revoked   boolean default false,
    member_id uuid
        constraint fk_member
            references accounts_member
            on delete cascade
);


